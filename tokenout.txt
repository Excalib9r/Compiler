<INT, int>
<ID, x>
<COMMA, ,>
<ID, y>
<COMMA, ,>
<ID, z>
<SEMICOLON, ;>
<FLOAT, float>
<ID, a>
<SEMICOLON, ;>
<INT, int>
<ID, var>
<LPAREN, (>
<INT, int>
<ID, a>
<COMMA, ,>
<INT, int>
<ID, b>
<RPAREN, )>
<SEMICOLON, ;>
<INT, int>
<ID, foo3>
<LPAREN, (>
<INT, int>
<ID, a>
<COMMA, ,>
<INT, int>
<ID, b>
<RPAREN, )>
<SEMICOLON, ;>
<INT, int>
<ID, func>
<LPAREN, (>
<INT, int>
<ID, c>
<COMMA, ,>
<INT, int>
<ID, d>
<RPAREN, )>
<LCURL, {>
<RETURN, return>
<CONST_INT, 7>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, correct_foo>
<LPAREN, (>
<INT, int>
<ID, a>
<COMMA, ,>
<FLOAT, float>
<ID, b>
<RPAREN, )>
<LCURL, {>
<RETURN, return>
<ID, a>
<ADDOP, +>
<CONST_INT, 3>
<SEMICOLON, ;>
<RCURL, }>
<VOID, void>
<ID, foo>
<LPAREN, (>
<INT, int>
<ID, a>
<RPAREN, )>
<LCURL, {>
<ID, y>
<ASSIGNOP, =>
<CONST_INT, 6>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, foo2>
<LPAREN, (>
<INT, int>
<ID, a>
<COMMA, ,>
<INT, int>
<ID, a>
<COMMA, ,>
<FLOAT, float>
<ID, b>
<RPAREN, )>
<LCURL, {>
<RETURN, return>
<ID, a>
<ADDOP, +>
<CONST_INT, 2>
<SEMICOLON, ;>
<RCURL, }>
<VOID, void>
<ID, foo3>
<LPAREN, (>
<INT, int>
<ID, a>
<COMMA, ,>
<INT, int>
<ID, b>
<RPAREN, )>
<LCURL, {>
<ID, y>
<ASSIGNOP, =>
<CONST_INT, 7>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, z>
<LPAREN, (>
<INT, int>
<ID, d>
<RPAREN, )>
<LCURL, {>
<RETURN, return>
<ID, d>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, var>
<LPAREN, (>
<INT, int>
<ID, a>
<RPAREN, )>
<LCURL, {>
<RETURN, return>
<ID, a>
<SEMICOLON, ;>
<RCURL, }>
<VOID, void>
<ID, foo4>
<LPAREN, (>
<INT, int>
<ID, a>
<RPAREN, )>
<LCURL, {>
<RETURN, return>
<ID, a>
<ADDOP, +>
<CONST_INT, 3>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, main>
<LPAREN, (>
<RPAREN, )>
<LCURL, {>
<INT, int>
<ID, a>
<COMMA, ,>
<ID, b>
<COMMA, ,>
<ID, c>
<LSQUARE, [>
<CONST_INT, 4>
<RSQUARE, ]>
<COMMA, ,>
<ID, dd>
<COMMA, ,>
<ID, ee>
<SEMICOLON, ;>
<VOID, void>
<ID, e>
<SEMICOLON, ;>
<FLOAT, float>
<ID, a>
<COMMA, ,>
<ID, c>
<LSQUARE, [>
<CONST_INT, 7>
<RSQUARE, ]>
<SEMICOLON, ;>
<ID, func>
<LPAREN, (>
<CONST_FLOAT, 2.5>
<COMMA, ,>
<CONST_FLOAT, 3.5>
<RPAREN, )>
<SEMICOLON, ;>
<ID, a>
<ASSIGNOP, =>
<ID, correct_foo>
<LPAREN, (>
<ID, a>
<COMMA, ,>
<ID, c>
<RPAREN, )>
<SEMICOLON, ;>
<ID, b>
<ASSIGNOP, =>
<ID, correct_foo>
<LPAREN, (>
<ID, a>
<RPAREN, )>
<SEMICOLON, ;>
<ID, dd>
<ASSIGNOP, =>
<ID, correct_foo>
<LPAREN, (>
<ID, a>
<COMMA, ,>
<ID, b>
<COMMA, ,>
<ID, a>
<RPAREN, )>
<SEMICOLON, ;>
<ID, k>
<ASSIGNOP, =>
<CONST_INT, 5>
<ADDOP, +>
<CONST_INT, 2>
<SEMICOLON, ;>
<ID, b>
<LSQUARE, [>
<CONST_INT, 5>
<RSQUARE, ]>
<ASSIGNOP, =>
<CONST_INT, 7>
<SEMICOLON, ;>
<ID, c>
<LSQUARE, [>
<CONST_FLOAT, 2.5>
<RSQUARE, ]>
<ASSIGNOP, =>
<CONST_INT, 8>
<SEMICOLON, ;>
<ID, c>
<LSQUARE, [>
<CONST_INT, 0>
<RSQUARE, ]>
<ASSIGNOP, =>
<CONST_INT, 2>
<ADDOP, +>
<CONST_INT, 5>
<MULOP, *>
<ID, foo4>
<LPAREN, (>
<CONST_INT, 7>
<RPAREN, )>
<SEMICOLON, ;>
<ID, c>
<LSQUARE, [>
<CONST_INT, 1>
<RSQUARE, ]>
<ASSIGNOP, =>
<CONST_INT, 5>
<SEMICOLON, ;>
<ID, foo4>
<LPAREN, (>
<ID, c>
<LSQUARE, [>
<CONST_INT, 1>
<RSQUARE, ]>
<RPAREN, )>
<SEMICOLON, ;>
<ID, c>
<LSQUARE, [>
<CONST_INT, 2>
<RSQUARE, ]>
<ASSIGNOP, =>
<ID, foo4>
<LPAREN, (>
<ID, c>
<LSQUARE, [>
<CONST_INT, 1>
<RSQUARE, ]>
<RPAREN, )>
<SEMICOLON, ;>
<ID, c>
<LSQUARE, [>
<CONST_INT, 3>
<RSQUARE, ]>
<ASSIGNOP, =>
<CONST_FLOAT, 2.7>
<SEMICOLON, ;>
<ID, b>
<ASSIGNOP, =>
<CONST_INT, 5>
<MULOP, %>
<CONST_INT, 0>
<SEMICOLON, ;>
<ID, b>
<ASSIGNOP, =>
<CONST_INT, 2>
<MULOP, %>
<CONST_FLOAT, 3.5>
<SEMICOLON, ;>
<ID, dd>
<ASSIGNOP, =>
<ID, foo5>
<LPAREN, (>
<ID, a>
<RPAREN, )>
<SEMICOLON, ;>
<ID, printf>
<LPAREN, (>
<ID, h>
<RPAREN, )>
<SEMICOLON, ;>
<RETURN, return>
<CONST_INT, 0>
<SEMICOLON, ;>
<RCURL, }>
